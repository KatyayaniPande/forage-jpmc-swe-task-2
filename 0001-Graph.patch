From aaada8fe5b8e693c58fe01f40c4f38416f19905b Mon Sep 17 00:00:00 2001
From: Katyayani <you@example.com>
Date: Wed, 19 Jul 2023 15:14:46 +0530
Subject: [PATCH] Graph

---
 src/App.tsx   | 20 ++++++++++++++++----
 src/Graph.tsx | 11 ++++++++++-
 2 files changed, 26 insertions(+), 5 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..53f1f6e 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false
     };
   }
 
@@ -29,19 +31,29 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
+    if(this.state.showGraph){
     return (<Graph data={this.state.data}/>)
   }
+}
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
+    let x=0;
+    const interval = setInterval(() => {
     DataStreamer.getData((serverResponds: ServerRespond[]) => {
-      // Update the state by creating a new array of data that consists of
-      // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
+            this.setState({ 
+              data: serverResponds,
+              showGraph: true,
+            });
     });
-  }
+    x++
+    if (x>1000){
+      clearInterval(interval);
+    }
+  },100);
+}
 
   /**
    * Render the App react component
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..75abaf7 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -32,7 +32,16 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem: document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    elem.setAttribute('view','y_line');
+    elem.setAttribute('column-pivots',["stock"]);
+    elem.setAttribute('row-pivots',["timestamp"]);
+    elem.setAttribute('columns',["top_ask_price"]);
+    elem.setAttribute('aggregates', 
+    {"stock":"distinct count",
+      "top_ask_price":"avg",
+      "top_bid_price":"avg",
+      "timestamp":"distinct count"});
 
     const schema = {
       stock: 'string',
-- 
2.41.0.windows.3

